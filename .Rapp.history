summary(aov(EtchRate~factor(Power),data=etchRateLong)
)
aov(EtchRate~factor(Power),data=etchRateLong)
mean(etchRateLong)
colMeans(etchRateLong)
with(etchRate,tapply(rate,RF,function(x) mean(x)-erate.mean))
etchRate$Power<-as.factor(etchRate$Power)
etchRAte$Power
etchRate$Power
etchRate$Long<-as.factor(etchRate$Long)
erate.mean<-mean(etchRate$power)
plot(etchRate)
plot(etchRate~Power)
boxplot(etchRate)
require(car)
durbin.watswon(aov(etchRate))
durbin.watson(aov(etchRate))
durbi.watson(aov(etchRate~factor(Power)))
durbin.watson(aov(etchRate~factor(Power)))
durbin.watson(aov(etchRate~factor(Power),data=etchRateLong))
etchRateAnova<-aov(EtchRate~factor(Power),data=etchRateLong))
etchRateAnova<-aov(EtchRate~factor(Power),data=etchRateLong)
durbin.watson(etchRateAnova)
barlett.text(etchRate~factor(Power),data=EtchRate)
barlett.test(etchRate~factor(Power),data=EtchRate)
help(barlett.test)
??barlett.test
bartlett.test(rate~RF,data=etchRate)
bartlett.test(etchRate~factor(Power),data=etchRate)
levene.test(etchRateAnova)
leveneTest(etchRateAnova)
summary(lm(EtchRate ~ factor(Power), data = etchRateLong))
TukeyHSD(aov(EtchRate ~ factor(Power), etchRateLong))
help(lm0)
help(lm)
fit <- lm(1740~17000+5.6+14.3+1800+5+28+2000+1692+2.13)
fit <- lm(y~x1+x2+x3+x4+x5+x6+x7X+x8+x9, (1740,17000,5.6,14.3,1800,5,28,2000,1692,2.13))
mydata=(1740,17000,5.6,14.3,1800,5,28,2000,1692,2.13)
mydata=c(1740,17000,5.6,14.3,1800,5,28,2000,1692,2.13)
fit <- lm(y~x1+x2+x3+x4+x5+x6+x7X+x8+x9, mydata)
d219=~/Desktop/d2_19t.txt
d219<- ~/Desktop/d2_19t.txt
d219= read.table("~/Desktop/d2_19t.txt", "\t")
d219=read.table("~/Desktop/d2_19t.txt")
Machine1=c(16.03,16.04,16.05,16.05,16.02,16.01,15.96,15.98,16.02,15.99)#
Machine2=c(16.02,15.97,15.96,16.01,15.99,16.03,16.04,16.02,16.01,16)
aov(Machine1)
Machine1
aov(data=Machine1)
df219=data.frame(Machine1,Machine2)
df219
aov(df219)
aov(data=df219)
plot(df219)
df219aov=aov(Machine1~Machine2,data=df219)
df219aov
summary(df219aov)
t.test(Machine1,Machine2)
help('t.test')
summary(Machine1)
summary(Machine2)
t.test(Machine1,Machine2,var.equal=TRUE)
sd(Machine1)
sd(Machine2)
help(z.test)
??z.test
z.test(Machine1,Machine2)
z.test2sam = function(a, b, var.a, var.b){#
   n.a = length(a)#
   n.b = length(b)#
   zeta = (mean(a) - mean(b)) / (sqrt(var.a/n.a + var.b/n.b))#
   return(zeta)#
}
z.test2sam(Machine1,Machine2,var(Machine1),var(Machine2))
var(Machine1)
var(Machine2)
dev(Machine1)
sd(Machine1)
z.test2sam(Machine1,Machine2,0.015,0.018)
mean(Machine1)
mean(Machine21)
mean(Machine2)
htest
}
return(z0)
z.test(Machine2,Machine2,0.015,0.018)
return(z0)
values1=Machine1
values2=Machine2
sd1=0.015
sd2=0.018
z0<-(val1mean-val2mean)/sqrt(((sd1^2)/length(values))+((sd2^2)/length(values2)))
val1mean=mean(values1)
val2mean=mean(values2)
z0<-(val1mean-val2mean)/sqrt(((sd1^2)/length(values))+((sd2^2)/length(values2)))
z0<-(val1mean-val2mean)/sqrt(((sd1^2)/length(values1))+((sd2^2)/length(values2)))
z0
library(BSDA)
help(z.test)
z.test
library(BSDA)
z.test
library(BSDA)
help(z.test)
z.test(values1,values2,0.015,0.018)
Machine1
z.test(Machine1,Sigma.x=0.015,Machine2,Sigma.y=0.018,conf.level=0.95)
z.test(Machine1,sigma.x=0.015,Machine2,sigma.y=0.018,conf.level=0.95)
z.test(Machine1,sigma.x=0.015,Machine2,sigma.y=0.018,alternative="two.sided",conf.level=0.95)
z.test(Machine1,sigma.x=0.015,Machine2,sigma.y=0.018,alternative="one.sided",conf.level=0.95)
z.test(Machine1,sigma.x=0.015,Machine2,sigma.y=0.018,mu=0,alternative="two.sided",conf.level=0.95)
normtemp=scan()
normtemp
mean(normtemp)
normtemp2=read.table(stdin())
normtemp2
normtemp2$v1
names(normtemp)
names(normtemp2)
help(dea)
y1<-c(44354248.50,,57633894.50,352515304.50,29522114.50,62307202,253475251.50,93906828,,367655632,,211420593.50,104600518.50)
y1<-c(44354248.50,NA,57633894.50,352515304.50,29522114.50,62307202,253475251.50,93906828,NA,367655632,NA,211420593.50,104600518.50)
y2<-c(447819,319874.58,598108,6961172,300103,368995,5636622,2497534,2104895,1317706,4110183,619373,526313,-5203060)
y3<-c(14140931,15448858.67,17382164,128876805,8955982,15246545,112215235,44368882,59935683,22216208,100739169,15006190,40450414,12753245)
x1<-c(18056146,15448218.68,19536254,72561014,7891826,22041821,69957082,31242770,NA,14612191,20838609,14400599,58852797,44252233)
x2<-c(6077864,5821629.70,2559024,115925492,11115613,15984204,86315553,14336307,NA,14711263,9072917,24524251,26770985)
x3<-c(52851111,5110474.76,6805531,16934768,2689960,6448262,16448974,5852751,NA,8279332,5302901,11674468,4445413)
x<-matrix(x1,x2,x3,ncol=3)
x
x<-matrix(x1,x2,x3)
x1
x<-matrix(c(x1,x2,x3),ncol=3)
x<-0
x<-matrix()
x
x<-matrix(14,3)
x
x[,1]<-x1
x<-matrix(1:14)
x
x[,1]<-x1
x
x[,2]<-x2
x<-matrix(nrow=14,ncol=3)
x
x[,1]=x1
x[,2]=x2
x2
x
x[,2]<-x2
x2[0]
x2[1]
x2[14]<-x2[13]
x2[13]<-x2[12]
x2[10]<-x2[11]
x2[12]<-9072917
x2[11]<-NA
x2
x2[10]<-14711263
x2
x[,2]<-x2
x{,3]<-x3
x[],3]<-x3
x[,3]<-x3
x3
x3[14]<-x3[13]
x3[13]<-x3[12]
x3[12]<-x3[11]
x3[11]<-NA
x3
x[,3]<-x3
x
y1
length(y1)
length(y2)
length(y3)
y1[14]<y1[13]
y1[14]<-y1[13]
y1[13]<-y1[12]
y1[12]<-y1[11]
y1[11]<-y1[10]
y1[10]<-y1[9]
y1
y1[10]<-122299982
y1
lenght(y1)
length(y1)
y<-matrix(ncol=3,nrow=14)
y[,1]=y1
y[,2]=y2
y[,3]=y3
y
dea.plot.frontier(x,y,txt=TRUE)
library(Benchmarking)
dea.plot.frontier(x,y,txt=TRUE)
e<-dea(x,y)
e
eff(e)
print(e)
summary(e)
e
print(e)
vectore<-c(e)
vectore
sfa(x, y, beta0 = NULL, lambda0 = 1, resfun = ebeta,TRANSPOSE = FALSE, DEBUG=FALSE,control=list(maxeval=1000, stepmax=1), hessian=2)
vectore(e)
ls()
vectore
dea(x,y)
x
y
install.package("KernSmooth")
install.package(KernSmooth)
install.packages(KernSmooth)
install.packages("krnsmooth")
install.packages("kernsmooth")
install.packages("KernSmooth")
library(KernSmooth)
install.packages("swirl")
library(swirl)
swirl()
5+7
x<-5+7
x
y<-x-3
y
z<-c(1.1,9,3.14)
?c
z
c(z,555,z)
z*2+100
mySqrt<-sqrt(z-1)
mySqrt
myDiv<-z/mySqrt
myDiv
c(1,2,3,4)+c(0,10)
c(1,2,3,4)+c(0,10,100)
bye()
exit
exit()
quit
bye
library(reshape2)
dir()
dir()
dt<-open.csv("ss06hidc.csv")
dt<-read.csv("ss06hidc.csv")
dt
dt
summary(restData)
summary(dt)
str(dt)
install.packages(jpeg)
library(jpeg)
read.jpeg(jeff.jpg)
dir()
